using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Persistence.Migrations
{
    /// <inheritdoc />
    public partial class edit : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 98, 167, 117, 31, 217, 79, 90, 9, 14, 200, 21, 41, 175, 55, 5, 89, 19, 131, 98, 198, 102, 137, 51, 136, 139, 213, 99, 3, 47, 158, 34, 7, 74, 112, 21, 187, 184, 97, 123, 39, 93, 34, 130, 214, 238, 108, 105, 125, 62, 7, 228, 123, 27, 227, 18, 15, 187, 114, 207, 40, 23, 224, 245, 144 }, new byte[] { 142, 190, 133, 152, 24, 196, 85, 69, 153, 3, 218, 67, 107, 2, 28, 253, 117, 251, 37, 222, 97, 96, 98, 203, 250, 60, 197, 246, 141, 133, 238, 166, 221, 63, 28, 168, 103, 40, 255, 247, 128, 154, 4, 119, 133, 59, 112, 245, 186, 35, 46, 145, 143, 0, 10, 219, 215, 66, 198, 129, 223, 31, 186, 174, 64, 183, 199, 65, 37, 13, 150, 196, 208, 212, 17, 97, 25, 74, 252, 195, 190, 231, 41, 10, 141, 183, 8, 95, 62, 185, 125, 132, 186, 220, 102, 77, 88, 232, 113, 15, 143, 234, 233, 241, 78, 3, 53, 111, 154, 139, 156, 228, 46, 63, 199, 172, 129, 59, 92, 229, 50, 101, 136, 111, 193, 92, 48, 77 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 15, 6, 251, 128, 114, 238, 191, 237, 244, 55, 87, 124, 76, 144, 73, 133, 251, 132, 65, 198, 74, 19, 92, 61, 28, 253, 251, 36, 149, 136, 92, 138, 26, 181, 175, 108, 145, 121, 196, 111, 76, 9, 25, 107, 135, 47, 194, 139, 7, 25, 222, 87, 199, 127, 42, 39, 34, 99, 129, 97, 255, 105, 224, 8 }, new byte[] { 75, 249, 73, 43, 115, 143, 221, 213, 160, 55, 142, 77, 173, 128, 186, 223, 190, 8, 123, 144, 106, 39, 78, 129, 7, 124, 206, 187, 131, 171, 115, 100, 52, 148, 219, 86, 85, 27, 44, 115, 246, 196, 108, 175, 86, 76, 196, 182, 236, 74, 239, 20, 110, 54, 206, 149, 99, 222, 81, 252, 191, 249, 42, 178, 49, 238, 60, 239, 226, 147, 248, 216, 224, 164, 12, 27, 52, 82, 130, 1, 173, 78, 11, 117, 7, 190, 172, 235, 62, 126, 150, 254, 105, 117, 188, 188, 118, 217, 77, 250, 28, 96, 220, 116, 74, 232, 47, 122, 56, 69, 233, 101, 111, 198, 26, 119, 246, 65, 182, 140, 223, 157, 110, 87, 213, 112, 39, 221 } });
        }
    }
}
